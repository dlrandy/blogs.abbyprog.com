{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/07/13/algorithm-linkedlist/","result":{"data":{"content":{"edges":[{"node":{"id":"ce2eb217-cee9-57a5-b408-607ce9387a66","html":"<h3 id=\"linked-list\" style=\"position:relative;\"><a href=\"#linked-list\" aria-label=\"linked list permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>linked list</h3>\n<p>它是实体的集合，但是不是顺序存储的。每一个实体都有指向下一个实体的指针。\n实体是由数据和引用组成。</p>\n<h3 id=\"linked-list的use-cases\" style=\"position:relative;\"><a href=\"#linked-list%E7%9A%84use-cases\" aria-label=\"linked list的use cases permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>linked list的use cases</h3>\n<p>在迭代过程中，可以在序列中的任意位置高效的插入和移除节点。但是不适合access和find，\n因为access time是线性时间。特别是随机访问，是不会快的。</p>\n<h3 id=\"复杂度\" style=\"position:relative;\"><a href=\"#%E5%A4%8D%E6%9D%82%E5%BA%A6\" aria-label=\"复杂度 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>复杂度</h3>\n<p>访问和搜索的时间复杂度是O(n);插入和删除的时间复杂度是O(1);</p>","excerpt":"linked list 它是实体的集合，但是不是顺序存储的。每一个实体都有指向下一个实体的指针。\n实体是由数据和引用组成。 linked list的use cases 在迭代过程中，可以在序列中的任意位置高效的插入和移除节点。但是不适合access和find，\n因为access…","fields":{"slug":"/2020/07/13/algorithm-linkedlist/"},"frontmatter":{"id":"linked-list","title":"链表","slug":"/2020/07/13/algorithm-linkedlist/","date":"2020-07-13T03:48:03.125Z","headerImage":"https://i.imgur.com/Ivxkc3R.jpg"}},"previous":null,"next":null}]}},"pageContext":{"id":"ce2eb217-cee9-57a5-b408-607ce9387a66","index":12}},"staticQueryHashes":["3705334695"]}